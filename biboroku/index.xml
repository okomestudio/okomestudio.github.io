<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Biboroku</title>
    <link>https://okomestudio.net/biboroku/</link>
    <description>Recent content on Biboroku</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Apr 2020 10:55:26 -0700</lastBuildDate>
    
	<atom:link href="https://okomestudio.net/biboroku/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About Biboroku</title>
      <link>https://okomestudio.net/biboroku/about/</link>
      <pubDate>Mon, 20 Apr 2020 10:55:26 -0700</pubDate>
      
      <guid>https://okomestudio.net/biboroku/about/</guid>
      <description>Biboroku is a blog collecting my occasional thoughts and memorandum.
Conventions Used in This Blog Italic
Indicates new terms, URLs, email addresses, filenames, and file extensions.
Constant width
Used for program listings, as well as within paragraphs to refer to program elements such as variable or function mames, databases, data types, environment variables, statements, and keywords.</description>
    </item>
    
    <item>
      <title>On Lazy Logging Evaluation</title>
      <link>https://okomestudio.net/biboroku/2020/04/on-lazy-logging-evaluation/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2020/04/on-lazy-logging-evaluation/</guid>
      <description>The stdlib logging package in Python encourages the C-style message format string and passing variables as arguments to its log method. For example,
logging.debug(&amp;#34;Result x = %d, y = %d&amp;#34; % (x, y)) # Bad logging.debug(&amp;#34;Result x = %d, y = %d&amp;#34;, x, y) # Good or</description>
    </item>
    
    <item>
      <title>Install Google Chrome on Debian Jessie</title>
      <link>https://okomestudio.net/biboroku/2014/11/install-google-chrome-on-debian-jessie/</link>
      <pubDate>Thu, 27 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/11/install-google-chrome-on-debian-jessie/</guid>
      <description>Download a DEB file for the version of Chrome you want from here.
Then
$ sudo aptitude install gconf-service libgconf-2-4 libnspr4 libnss3 libpango1.0-0 libappindicator1 libcurl3 $ sudo dpkg -i google-chrome-stable_current_amd64.</description>
    </item>
    
    <item>
      <title>Installing Adobe Reader on Debian/Jessie</title>
      <link>https://okomestudio.net/biboroku/2014/10/installing-adobe-reader-on-debianjessie/</link>
      <pubDate>Fri, 10 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/10/installing-adobe-reader-on-debianjessie/</guid>
      <description>Once in a while you need to deal with fancier PDF files which may allow you to type in using forms, but Linux applications like Okular might not be fully capable of handling Adobe’s proprietary features. In such an unfortunate event, you might need to use Adobe Reader.</description>
    </item>
    
    <item>
      <title>Interpreting A/B Test using Python</title>
      <link>https://okomestudio.net/biboroku/2014/05/interpreting-ab-test-using-python/</link>
      <pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/05/interpreting-ab-test-using-python/</guid>
      <description>Suppose we ran an A/B test with two different versions of a web page, \( a \) and \( b \), for which we count the number of visitors and whether they convert or not. We can summarize this in a contingency table showing the frequency distribution of the events:</description>
    </item>
    
    <item>
      <title>Brand Positioning by Correspondence Analysis</title>
      <link>https://okomestudio.net/biboroku/2014/05/brand-positioning-by-correspondence-analysis/</link>
      <pubDate>Wed, 07 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/05/brand-positioning-by-correspondence-analysis/</guid>
      <description>I was reading an article about visualization techniques using multidimensional scaling (MDS), the correspondence analysis in particular. The example used R, but as usual I want to find ways to do it on Python, so here goes.
The correspondence analysis is useful when you have a two-way contingency table for which relative values of ratio-scaled data are of interest.</description>
    </item>
    
    <item>
      <title>PCA and Biplot using Python</title>
      <link>https://okomestudio.net/biboroku/2014/04/pca-and-biplot-using-python/</link>
      <pubDate>Thu, 24 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/04/pca-and-biplot-using-python/</guid>
      <description>There are several ways to run principal component analysis (PCA) using various packages (scikit-learn, statsmodels, etc.) or even just rolling out your own through singular-value decomposition and such. Visualizing the PCA result can be done through biplot. I was looking at an example of using prcomp and biplot in R, but it does not seem like there is a comparable plug-and-play way of generating a biplot on Python.</description>
    </item>
    
    <item>
      <title>Near-Duplicate Detection using MinHash: Background</title>
      <link>https://okomestudio.net/biboroku/2014/04/near-duplicate-detection-using-minhash-background/</link>
      <pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/04/near-duplicate-detection-using-minhash-background/</guid>
      <description>There are numerous pieces of duplicate information served by multiple sources on the web. Many news stories that we receive from the media tend to originate from the same source, such as the Associated Press. When such contents are scraped off the web for archiving, a need may arise to categorize documents by their similarity (not in the sense of meaning of the text but the character-level or lexical matching).</description>
    </item>
    
    <item>
      <title>A Trick for Computing the Sum of Geometric Series</title>
      <link>https://okomestudio.net/biboroku/2014/04/a-trick-for-computing-the-sum-of-geometric-series/</link>
      <pubDate>Fri, 04 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/04/a-trick-for-computing-the-sum-of-geometric-series/</guid>
      <description>Say if I need to compute the sum of a series like this one:
\begin{equation} y = 1 + 2 x + 3 x^2 + 4 x^3 + \dots \, \label{eq:a} \end{equation}
where \( |x| &amp;lt; 1 \). This series looks like a geometric series in which case the sum can be computed from</description>
    </item>
    
    <item>
      <title>Creating Debian Wheezy Installation USB Stick</title>
      <link>https://okomestudio.net/biboroku/2014/02/installing-debian-wheezy-from-a-usb-stick/</link>
      <pubDate>Thu, 20 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2014/02/installing-debian-wheezy-from-a-usb-stick/</guid>
      <description>The simplest way to create a bootable USB stick for Debian installation is to use command dd to copy an ISO image to an empty USB stick.
First, connect an empty USB stick to a working Linux box, and see which device represents the stick:</description>
    </item>
    
    <item>
      <title>Using Japanese on Debian Wheezy</title>
      <link>https://okomestudio.net/biboroku/2012/09/using-japanese-on-debian-wheezy/</link>
      <pubDate>Fri, 21 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2012/09/using-japanese-on-debian-wheezy/</guid>
      <description>The goal is to make the system capable for Japanese input, while letting the base system remain English. For the Japanese input method, I had been using Anthy, but I will be using mozc, which is now better supported and presumably much better (it is).</description>
    </item>
    
    <item>
      <title>Installing Debian Squeeze from Hard Disk</title>
      <link>https://okomestudio.net/biboroku/2010/12/installing-debian-squeeze-from-hard-disk/</link>
      <pubDate>Tue, 14 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/12/installing-debian-squeeze-from-hard-disk/</guid>
      <description>Unfortunately the Debian installer does not work on my Dell desktop box. I still wanted to do a fresh install of Squeeze, and the only sensible option for me was to install off hard disk. I have been having the same issue for several months and I have not been able to solve it myself, and nobody responds to my bug report; however, this hard drive method may work well even if I have a working install USB stick/CD media.</description>
    </item>
    
    <item>
      <title>Installing F.lux on Debian Squeeze</title>
      <link>https://okomestudio.net/biboroku/2010/11/installing-f-lux-on-debian-squeeze/</link>
      <pubDate>Sat, 20 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/11/installing-f-lux-on-debian-squeeze/</guid>
      <description>In another feeble attempt to become a “morning person,” I’ve decided to follow the usual advice that I should not be looking at bright LCD screen at night to help myself going into the “sleep mode.”
Hence F.lux.
I want it to launch automatically at the start of a KDE session.</description>
    </item>
    
    <item>
      <title>Installing Bruzual &amp; Charlot 2003 (GALAXEV) on Debian Squeeze</title>
      <link>https://okomestudio.net/biboroku/2010/10/installing-bruzual-charlot-2003-galaxev-on-debian-squeeze/</link>
      <pubDate>Tue, 19 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/10/installing-bruzual-charlot-2003-galaxev-on-debian-squeeze/</guid>
      <description>The installation procedure is confusing only if you are not using csh (I use Bash) and if g77 is not available. Otherwise you can simply follow the installation procedure outlined in the official documentation file (i.e., bc03/doc/bc03.ps.gz).
First, you definitely need csh and a FORTRAN compiler:</description>
    </item>
    
    <item>
      <title>Testing if a Point is Inside a Polygon in Python</title>
      <link>https://okomestudio.net/biboroku/2010/06/testing-if-a-point-is-inside-a-polygon-in-python/</link>
      <pubDate>Thu, 24 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/06/testing-if-a-point-is-inside-a-polygon-in-python/</guid>
      <description>Finally got around to find this out by Googling. It’s a useful function so I reproduce it here for copy &amp;amp; paste:
def inside_polygon(x, y, points): &amp;#34;&amp;#34;&amp;#34; Return True if a coordinate (x, y) is inside a polygon defined by the list of verticies [(x1, y1), (x2, y2), .</description>
    </item>
    
    <item>
      <title>Installing Kindle for PC on Debian Squeeze</title>
      <link>https://okomestudio.net/biboroku/2010/06/installing-kindle-for-pc-on-debian-squeeze/</link>
      <pubDate>Fri, 11 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/06/installing-kindle-for-pc-on-debian-squeeze/</guid>
      <description>I sometimes want to run Kindle for PC on Wine. Amazon is so lame that they don’t even bother making a native Linux version of this software!
Here is the procedure. Move to a temporary directory and do:
$ sudo aptitude install wine lib32nss-mdns cabextract bzip2 $ wget http://www.</description>
    </item>
    
    <item>
      <title>Installing ATLAS on Mac OS X Snow Leopard</title>
      <link>https://okomestudio.net/biboroku/2010/03/installing-atlas-on-mac-os-x-snow-leopard/</link>
      <pubDate>Mon, 22 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/03/installing-atlas-on-mac-os-x-snow-leopard/</guid>
      <description>Installing from Fink Do:
$ fink install atlas atlas-shlibs That’s it. They will be installed under /sw/lib.
Installing from Source (Recommended if Building Other Software That Depends on ATLAS) First of all, I need a FORTRAN compiler, so install it.</description>
    </item>
    
    <item>
      <title>Installing SExtractor on Mac OS X Snow Leopard</title>
      <link>https://okomestudio.net/biboroku/2010/03/installing-sextractor-on-mac-os-x-snow-leopard/</link>
      <pubDate>Mon, 22 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/03/installing-sextractor-on-mac-os-x-snow-leopard/</guid>
      <description>(November 25, 2010) I screwed up SExtractor installation for no reason and in an attempt to fix it, I’ve found a few things. After wasting a few hours again, I think this installation note can work for most people who can actually build software from source&amp;hellip; I think the usefulness of this note will be limited though, as a new release of SExtractor appears imminent.</description>
    </item>
    
    <item>
      <title>Installing Squid Proxy Server on Mac OS X Snow Leopard</title>
      <link>https://okomestudio.net/biboroku/2010/03/installing-squid-proxy-server-on-mac-os-x-snow-leopard/</link>
      <pubDate>Mon, 22 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/03/installing-squid-proxy-server-on-mac-os-x-snow-leopard/</guid>
      <description>My goal is to set up a very basic proxy server on my Mac box on campus, so that I can have full access to subscription-based academic journals via the proxy on my laptop even when I am off campus.</description>
    </item>
    
    <item>
      <title>Installing FFTW on Mac OS X Snow Leopard</title>
      <link>https://okomestudio.net/biboroku/2010/03/installing-fftw-on-mac-os-x-snow-leopard/</link>
      <pubDate>Thu, 18 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/03/installing-fftw-on-mac-os-x-snow-leopard/</guid>
      <description>No FORTRAN compiler appears to be included in Xcode, so I need to install it if I haven’t done so. I installed GFortran. In the configure statement below, set F77 to gfortran.
Installing from Fink For FFTW version 3.x, do:</description>
    </item>
    
    <item>
      <title>Installing HOTPANTS 5.1.10 on Mac OS X Leopard</title>
      <link>https://okomestudio.net/biboroku/2010/03/installing-hotpants-5-1-10-on-mac-os-x-leopard/</link>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2010/03/installing-hotpants-5-1-10-on-mac-os-x-leopard/</guid>
      <description>You must love the name, but what the software does is far from sultry; it’s a piece of geekware.
Anyways, I needed to edit files when I install HOTPANTS, photometric alignment utility by Andrew Becker. Here is my installation note before I forget.</description>
    </item>
    
    <item>
      <title>Setting Up Squid Proxy Server on Mac OS X Leopard</title>
      <link>https://okomestudio.net/biboroku/2009/07/setting-up-squid-proxy-server-on-mac-os-x-leopard/</link>
      <pubDate>Thu, 30 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2009/07/setting-up-squid-proxy-server-on-mac-os-x-leopard/</guid>
      <description>My goal is to set up a very basic proxy server on my Mac box on campus, so that I can have full access to subscription-based academic journals via the proxy on my laptop even when I am off campus.</description>
    </item>
    
    <item>
      <title>Formatting a USB Drive with ext4 for Use with Linux</title>
      <link>https://okomestudio.net/biboroku/2009/03/formatting-a-usb-drive-for-use-with-debian/</link>
      <pubDate>Fri, 27 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://okomestudio.net/biboroku/2009/03/formatting-a-usb-drive-for-use-with-debian/</guid>
      <description>I wish to use an external USB drive exclusively on a Linux system (in my case, Debian). I want to use the ext4 filesystem. Note that this method wipes out the filesystem on the drive.
Install hotplug-type package such that upon plugging the USB drive in the device is attached to somewhere in the system.</description>
    </item>
    
  </channel>
</rss>